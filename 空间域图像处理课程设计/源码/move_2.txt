import time
import cv2 as cv
import numpy as np
def f_move_2(x, y, path):
    # 使用近似加速

    start_time = time.perf_counter()  # 记录开始时间
    img = cv.imread(path)

    # 缩小的图像（使用 INTER_AREA 方法）
    scale_percent = 50  # 缩小百分之五十
    height, width = img.shape[:2]
    width_small = int(width * scale_percent / 100)
    height_small = int(height * scale_percent / 100)
    dim = (width_small, height_small)
    small_img = cv.resize(img, dim, interpolation=cv.INTER_AREA)


    # 读取图片

    image = small_img
    img = cv.imread(path)
    # 获取图片的行列数和通道数
    rows, cols, chs = img.shape
    # 移动后新建一个空白的图片
    img_move = np.zeros((rows, cols, chs), dtype=np.uint8)
    # 将原图像素点移动到目标位置
    for i in range(rows):
        for j in range(cols):
            if i + y >= rows or j + x >= cols:
                continue
            img_move[i + y][j + x] = img[i][j]

    image = img_move
    height, width = img.shape[:2]
    # 放大的图像
    scale_percent = 200  # 放大百分之二百
    width_large = int(width * scale_percent / 100)
    height_large = int(height * scale_percent / 100)
    dim = (width_large, height_large)
    large_img = cv.resize(image, dim, interpolation=cv.INTER_LINEAR)

    end_time = time.perf_counter()  # 记录结束时间
    run_time = end_time - start_time  # 计算函数运行时间
    print(f"The function took {run_time:.6f}s to run.")




    return large_img




